//KC03O8EA JOB ,'SAM PIECZ',MSGCLASS=H
//STEP1 EXEC PGM=ASSIST
//STEPLIB DD DSN=KC02293.ASSIST.LOADLIB,DISP=SHR
//SYSPRINT DD SYSOUT=*
//SYSIN DD *
***************************************************
* ASSIGNMENT FIVE
*
* NAME: SAMUEL PIECZ
*
* CSECT: MAIN
*
* REGISTER USAGE:
* 1  Holds parameters that are passed into subroutines
* 2  Holds num from BUFFER
* 3  Holds num from BUFFER
* 4  Holds num from BUFFER
* 5  Holds num from BUFFER
* 6  Holds num from BUFFER
* 7  Holds num from BUFFER
* 8  Holds BUFFER
* 9  Unused
* 10 Unused
* 11 Unused
* 12 Linkage register
* 13 Linkage register
* 14 Reserved for exiting subroutines
* 15 Reserved for subroutines
***************************************************
MAIN     CSECT
*
***< ENTRY LINKAGE>
*
         STM   14,12,12(13)
         LR    12,15
         USING MAIN,12
         LA    14,MAINSAVE
         ST    14,8(0,13)
         ST    13,4(0,14)
         LR    13,14
*
***< CALL BUILD SUBROUTINE AND PASS IN PARMS>
*
         LA    1,PARMS         Load params into R1
         L     15,=V(BUILD)    Load R15 with subr
         BALR  14,15           Branch to subroutin
*
***< READ IN D1-D3 & H1-H3>
*
         XDECI 8,BUFFER        Put buffer in R8
         C     8,=F'-1010101'  Check if R8 is delim
         BC    B'1000',BOTTOM  If it is, goto bottm
BOTTOM   XREAD BUFFER,80       Read buffer
         XDECI 2,BUFFER        Put num1 in R2
         ST    2,D1            Put num1 divide by num1
         XDECI 3,0(1)          Same thing for num2
         ST    3,H1            Same thing num2 aka howmany
         XREAD BUFFER,80       Read in more data
         XDECI 4,BUFFER        same thing for second set
         ST    4,D2            same thing for second set
         XDECI 5,0(1)          same thing for second set
         ST    5,H2            same thing for second set
         XREAD BUFFER,80       Read in more data
         XDECI 6,BUFFER        same thing for third set
         ST    6,D3            same thing for third set
         XDECI 7,0(1)          same thing for third set
         ST    7,H3            same thing for third set
         XPRNT TOC,15          Print table of contents
*
***< START PRINT SUBROUTINE>
*
         L     2,=F'1'         Load 1 into R2
         ST    2,DIV           Put 2 in DIV fullword
         L     3,=F'5'         Load 5 into R3
         ST    3,HOWMANY       Put R3 in HOWMANY
         LA    1,PPARMS        Load parameters in R1
         L     15,=V(PRINT)    Put Print subroutine in R15
         BALR  14,15           Branch to print subroutine
*
***< PRINT D1-D3 & H1-H3 AND MULTIPLES>
*
         XPRNT SET1,15         Print multiple
         L     2,D1            Load D1 into R2
         L     3,H1            Load H1 into R3
         ST    2,DIV           Put R2 in DIV
         ST    3,HOWMANY       Put R3 in HOWMANY
         LA    1,PPARMS        Load above vals in parms
         L     15,=V(PRINT)    Load subroutine into R15
         BALR  14,15           Branch to print routine
         XPRNT SET2,16         Redo above operations
         L     2,D2            with the new values
         L     3,H2            same as above
         ST    2,DIV           same as above
         ST    3,HOWMANY       same as above
         LA    1,PPARMS        same as above
         L     15,=V(PRINT)    same as above
         BALR  14,15           same as above
         XPRNT SET3,16         same as above
         L     2,D3            same as above
         L     3,H3            same as above
         ST    2,DIV           same as above
         ST    3,HOWMANY       same as above
         LA    1,PPARMS        same as above
         L     15,=V(PRINT)    same as above
         BALR  14,15           same as above
*
***< EXIT LINKAGE>
*
         L     13,4(0,13)
         LM    14,12,12(13)
         BR    14
*
***< MAIN LTORGS>
*
         LTORG
*
***< FOR MULTIPLES>
*
SET1     DC    C' '                  Declare set 1 for printing
         DC    CL14'Multiples of 9'  Banner text
SET2     DC    C' '                  Declare set 2 for printing
         DC    CL15'Multiples of 10' Banner text
SET3     DC    C' '                  Declare set 3 for printing
         DC    CL15'Multiples of 13' Banner text
*
***< FOR TABLE OF Contents>
*
TOC      DC    C' '                 Table of contents
         DC    CL14'Table Contents' banner text
D1       DS    F                    Fullwords for howmany and divide
D2       DS    F                    Fullwords for howmany and divide
D3       DS    F                    Fullwords for howmany and divide
H1       DS    F                    Fullwords for howmany and divide
H2       DS    F                    Fullwords for howmany and divide
H3       DS    F                    Fullwords for howmany and divide
*
***< PARAMETER LISTS ONE FOR BUILD ONE FOR PRINT>
*
TABLE    DC    80F'-64'             Declare table for storing nums
EOT      DS    F                    End of table
BUFFER   DS    80C                  Setup buffer
         DC    C'*'                 Add delimeter to the end of bufer
DIV      DS    F                    Divide by fullword
HOWMANY  DS    F                    Howmany to print fullword
PARMS    DC    A(TABLE)             Load params for BUILD subroutine
         DC    A(EOT)               Load address of end of table
         DC    A(BUFFER)            Load address of buffer
PPARMS   DC    A(TABLE)             New params for PRINT subroutine
         DC    A(EOT)               Address for EOT
         DC    A(DIV)               Address for divide by this num
         DC    A(HOWMANY)           Address for howmany to print
*
***< RESTORE REGISTERS >
*
MAINSAVE DS    18F
***************************************************
*
* CSECT: BUILD
*
* CSECT: MAIN
*
* REGISTER USAGE:
* 1  Parameters are passed into this register, also used for holding R4
* 2  Holds passed in parameters - Table address
* 3  Holds passed in parameters - End of table address
* 4  Holds passed in parameters - Buffer address
* 5  Unused
* 6  Used to hold current num during iteration & comparison
* 7  Unused
* 8  Unused
* 9  Unused
* 10 Unused
* 11 Unused
* 12 Linkage register
* 13 Linkage register
* 14 Reserved for exiting subroutines
* 15 Reserved for subroutines
***************************************************
BUILD    CSECT
*
***< ENTRY LINKAGE>
*
         STM   14,12,12(13)
         LR    12,15
         USING BUILD,12
         LA    14,BSAVE
         ST    13,4(0,14)
         ST    14,8(0,13)
         LR    13,14
*
***< START LOGIC>
*
         LM    2,4,0(1)            Load R2-R4 with params
LOOP1    XREAD 0(4),80             BEGIN READ
         BC    B'0100',ENDL1       Branch on less than
         LA    1,0(4)              Load R1 with R4
LOOP2    XDECI 6,0(1)              Put R1 into R6
         BC    B'0001',LOOP1       Branch if delim
         C     6,=F'-1010101'      Compare num with delim
         BC    B'1000',ENDL1       Branch if equal to delim
         ST    6,0(2)              Store num in table
         LA    2,4(0,2)            Increment pointer
         BC    B'1111',LOOP2       Unconditional goto LOOP2
ENDL1    ST    2,0(0,3)            Store R2 into R3
*
***< EXIT LINKAGE >
*
         L     13,4(0,13)
         LM    14,12,12(13)
         BR    14
         LTORG
BSAVE    DS    18F
***************************************************
*
* CSECT: PRINT
*
* REGISTER USAGE:
* 1  Parameters are passed into this register, also used for holding R4
* 2  Holds passed in parameters - Table address
* 3  Holds passed in parameters - End of table address
* 4  Holds passed in parameters - Number to divide by
* 5  Holds passed in parameters - How many items to print
* 6  Division - first half of num
* 7  Division - second half of num
* 8  Intermediary register to put num in pnum in pline
* 9  Holds -64 for comparison
* 10 Holds pointer to beginning of PLINE
* 11 Used as a counter
* 12 Linkage register
* 13 Linkage register
* 14 Reserved for exiting subroutines
* 15 Reserved for subroutines
***************************************************
PRINT    CSECT
*
***< ENTRY LINKAGE>
*
         STM   14,12,12(13)
         LR    12,15
         USING PRINT,12
         LA    14,PSAVE
         ST    13,4(0,14)
         ST    14,8(0,13)
         LR    13,14
*
***< START LOGIC>
*
         LM    2,5,0(1)            Load params
         SR    11,11               Clear counter
LOOP4    LA    10,PLINE+1          Load start of PLINE
         MVI   PLINE+1,C' '        Put first space in PLINE
         MVC   PLINE+2(95),PLINE+1 Copy first space destructively
         L     11,=F'0'            Load zero into R11
LOOP5    C     11,0(5)             Compare counter and howmany
         BC    B'1000',PRINTME1    If table empty end
         CR    2,3                 Compare table and eot
         BC    B'1000',PRINTME2    If EOT make it stop
         L     9,=F'-64'           Load -64 into R9
         C     9,0(0,2)            Compare table value, and R9
         BC    B'1000',PRINTME2    If value is -64 skip to end
         L     7,0(0,2)            Load num into R7 for division
         M     6,=F'1'             Clear out R6 for division
         D     6,0(4)              Divide R7 by R3
         C     6,=F'0'             See if remainder is 0
         BC    B'0111',NOPE        If not equal don't print
         L     8,0(0,2)            Load number into R8
         XDECO 8,PNUM              Put R8 aka num, in PNUM
         MVC   0(12,10),PNUM       Put num into PLINE
         LA    10,12(0,10)         Increment pointer to PLINE
         A     11,=F'1'            Increment counter
NOPE     LA    2,4(0,2)            Increment table ptr
         B     LOOP5               Unconditional branch to LOOP5
PRINTME1 XPRNT PLINE,97            Print the line
         B     LOOP4               and loop again
PRINTME2 XPRNT PLINE,97            Last line, just print it no loop
*
***< EXIT LINKAGE >
*
         L     13,4(0,13)
         LM    14,12,12(13)
         BR    14
*
***< LTORG FOR PRINT>
*
         LTORG
PLINE    DC    C' '                Line for printing
         DC    CL96' '             96 spaces long
PNUM     DS    CL12' '             pnum is where value goes
*
***< RESTORE REGISTERS>
*
PSAVE    DS    18F
         END   MAIN
/*
//FT05F001  DD  DSN=KC02314.AUTUMN18.CSCI360.HW5DATA,DISP=SHR
//
